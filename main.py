import os
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# /start –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üéâ –Ø –±–æ—Ç –¥–ª—è —É—á—ë—Ç–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ –∏ –¥–æ—Ö–æ–¥–æ–≤.\n"
        "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥ –∏–ª–∏ –¥–æ—Ö–æ–¥: /add 500\n"
        "üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å: /stats"
    )

# /add <—Å—É–º–º–∞>
async def add(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("‚ö†Ô∏è –£–∫–∞–∂–∏ —á–∏—Å–ª–æ. –ü—Ä–∏–º–µ—Ä: /add 500")
        return
    
    try:
        amount = float(context.args[0])
    except ValueError:
        await update.message.reply_text("‚ö†Ô∏è –ù—É–∂–Ω–æ –∏–º–µ–Ω–Ω–æ —á–∏—Å–ª–æ. –ü—Ä–∏–º–µ—Ä: /add 1200")
        return
    
    with open("finance.txt", "a") as f:
        f.write(f"{amount}\n")
    
    await update.message.reply_text(f"‚úÖ –ó–∞–ø–∏—Å–∞–ª: {amount}")

# /stats
async def stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        with open("finance.txt", "r") as f:
            amounts = [float(x.strip()) for x in f.readlines()]
    except FileNotFoundError:
        amounts = []

    total = sum(amounts)
    await update.message.reply_text(f"üí∞ –ë–∞–ª–∞–Ω—Å: {total}")

def main():
    token = os.environ.get("BOT_TOKEN")
    if not token:
        raise RuntimeError("‚ùå –û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

    app = Application.builder().token(token).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("add", add))
    app.add_handler(CommandHandler("stats", stats))
    app.run_polling()

if __name__ == "__main__":
    main()
